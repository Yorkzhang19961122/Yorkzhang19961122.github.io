<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-10-29T22:01:55+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">极客猴</title><subtitle>猴哥的个人博客: 极客猴。分享自己总结的Python爬虫，Web开发，数据分析的心得。 此外还输出自己的思考内容，涉猎产品知识、个人成长等，每周给你带来头脑大爆炸。</subtitle><entry><title type="html">学爬虫之道</title><link href="http://localhost:4000/17625.html" rel="alternate" type="text/html" title="学爬虫之道" /><published>2017-06-25T01:05:52+08:00</published><updated>2017-06-25T01:05:52+08:00</updated><id>http://localhost:4000/%E5%AD%A6%E7%88%AC%E8%99%AB%E4%B9%8B%E9%81%93</id><content type="html" xml:base="http://localhost:4000/17625.html">&lt;p&gt;近来在阅读 《轻量级 Django》,虽然还没有读完，但我已经收益颇多。我不得不称赞 Django 框架的开发人员，他们把 Web 开发降低门槛。Django 让我从对 Web 开发是一无所知到现在可以编写小型 web 应用，这很舒服。&lt;/p&gt;

&lt;p&gt;Django 已经算是入门，所以自己把学习目标转到爬虫。自己接下来会利用三个月的时间来专攻 Python 爬虫。这几天，我使用“主题阅读方法”阅读 Python 爬虫入门的文档。制定 Python 爬虫的学习路线。&lt;/p&gt;

&lt;h3 id=&quot;第一阶段夯实&quot;&gt;第一阶段：夯实&lt;/h3&gt;
&lt;p&gt;入门要就是在打基础，所以要从最基础的库学起。下面是几个库是入门最经典的库&lt;/p&gt;
&lt;h4 id=&quot;1urllib&quot;&gt;1）urllib&lt;/h4&gt;
&lt;p&gt;它属于 Python 标准库。该库的作用是请求网页并下载数据。在学习该库之前，最好把 HTTP 协议了解下。这会大大提高后面的学习效率。&lt;/p&gt;

&lt;p&gt;先学会如何使用 urllib 请求到数据，再学习一些高级用法。例如：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;设置 Headers: 某些网站反感爬虫的到访，于是对爬虫一律拒绝请求。设置 Headers 可以把请求伪装成浏览器访问网站。&lt;/li&gt;
  &lt;li&gt;Proxy 的设置: 某些站点做了反倒链的设置，会将高频繁访问的 IP 地址封掉。所以我们需要用到代理池。&lt;/li&gt;
  &lt;li&gt;错误解析：根据 URLError 与 HTTPError 返回的错误码进行解析。&lt;/li&gt;
  &lt;li&gt;Cookie 的使用：可以模拟网站登录，需要结合 cookielib 一起使用。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;2re&quot;&gt;2）re&lt;/h4&gt;
&lt;p&gt;re 是正则表达式库。同时也是 Python 标准库之一。它的作用是匹配我们需要爬取的内容。所以我们需要掌握正则表达式常用符号以及常用方法的用法。&lt;/p&gt;

&lt;h4 id=&quot;3beautifulsoup&quot;&gt;3）BeautifulSoup&lt;/h4&gt;
&lt;p&gt;BeautifulSoup 是解析网页的一款神器。它可以从 HTML 或者 XML 文件中提取数据。配合 urllib 可以编写出各种小巧精干的爬虫脚本。&lt;/p&gt;

&lt;h3 id=&quot;第二阶段进阶&quot;&gt;第二阶段：进阶&lt;/h3&gt;
&lt;p&gt;当把基础打牢固之后，我们需要更进一步学习。使用更加完善的库来提高爬取效率&lt;/p&gt;
&lt;h4 id=&quot;1-使用多线程&quot;&gt;1) 使用多线程&lt;/h4&gt;
&lt;p&gt;使用多线程抓取数据，提高爬取数据效率。&lt;/p&gt;
&lt;h4 id=&quot;2学习-requests&quot;&gt;2）学习 Requests&lt;/h4&gt;
&lt;p&gt;Requests 作为 urlilb 的替代品。它是更加人性化、更加成熟的第三方库。使用 Requests 来处理各种类型的请求，重复抓取问题、cookies 跟随问题、多线程多进程、多节点抓取、抓取调度、资源压缩等一系列问题。&lt;/p&gt;
&lt;h4 id=&quot;3学习-xpath&quot;&gt;3）学习 Xpath&lt;/h4&gt;
&lt;p&gt;Xpath 也算是一款神器。它是一款高效的、表达清晰简单的分析语言。掌握它以后介意弃用正则表达式了。一般是使用浏览器的开发者工具 加 lxml 库。&lt;/p&gt;
&lt;h4 id=&quot;4学习-selenium&quot;&gt;4）学习 Selenium&lt;/h4&gt;
&lt;p&gt;使用 Selenium，模拟浏览器提交类似用户的操作，处理js动态产生的网页。因为一些网站的数据是动态加载的。类似这样的网站，当你使用鼠标往下滚动时，会自动加载新的网站。&lt;/p&gt;

&lt;h3 id=&quot;第三阶段突破&quot;&gt;第三阶段：突破&lt;/h3&gt;
&lt;h4 id=&quot;1学习-scrapy&quot;&gt;1）学习 Scrapy&lt;/h4&gt;
&lt;p&gt;Scrapy 是一个功能非常强大的分布式爬虫框架。我们学会它，就可以不用重复造轮子。&lt;/p&gt;

&lt;h4 id=&quot;2数据存储&quot;&gt;2）数据存储&lt;/h4&gt;
&lt;p&gt;如果爬取的数据条数较多，我们可以考虑将其存储到数据库中。因此，我们需要学会 MySql
MongoDB、SqlLite的用法。更加深入的，可以学习数据库的查询优化。&lt;/p&gt;

&lt;h3 id=&quot;第四阶段为我所用&quot;&gt;第四阶段：为我所用&lt;/h3&gt;
&lt;p&gt;当爬虫完成工作，我们已经拿到数据。我们可以利用这些数据做数据分析、数据可视化、做创业项目原始启动数据等。
我们可以学习 NumPy、Pandas、 Matplotlib 这三个库。&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;NumPy ：它是高性能科学计算和数据分析的基础包。&lt;/li&gt;
  &lt;li&gt;Pandas : 基于 NumPy 的一种工具，该工具是为了解决数据分析任务而创建的。它可以算得上作弊工具。&lt;/li&gt;
  &lt;li&gt;Matplotlib：Python中最著名的绘图系统Python中最著名的绘图系统。它可以制作出散点图，折线图，条形图，直方图，饼状图，箱形图散点图，折线图，条形图，直方图，饼状图，箱形图等。&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;本文原创发布于微信公众号「极客猴」，欢迎关注第一时间获取更多原创分享&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name></name></author><category term="Python" /><category term="网络爬虫" /><summary type="html">近来在阅读 《轻量级 Django》,虽然还没有读完，但我已经收益颇多。我不得不称赞 Django 框架的开发人员，他们把 Web 开发降低门槛。Django 让我从对 Web 开发是一无所知到现在可以编写小型 web 应用，这很舒服。</summary></entry><entry><title type="html">你为何要那么拼命？</title><link href="http://localhost:4000/17111.html" rel="alternate" type="text/html" title="你为何要那么拼命？" /><published>2017-01-11T11:23:14+08:00</published><updated>2017-01-11T11:23:14+08:00</updated><id>http://localhost:4000/%E4%BD%A0%E4%B8%BA%E4%BD%95%E8%A6%81%E9%82%A3%E4%B9%88%E6%8B%BC%E5%91%BD%3F</id><content type="html" xml:base="http://localhost:4000/17111.html">&lt;p&gt;很多人往往有这样的状态，当完成一个目标之后，就守着这收获的成果沾沾自喜。你觉得考上了大学，就可以整天逃课沉迷于游戏？你觉得找到工作了，就可以准时下班走人，天天潇潇洒洒？答案是否定的。如果你是现在身处这状态，说明你对自己未来人生没有什么规划，是对自己极其不负责任的表示。你试问你自己，是否有在为自己拼命？&lt;/p&gt;

&lt;p&gt;01.
何炅, 这个名字已经家喻户晓了。大家都知道他是大名鼎鼎的湖南电视台主持人。平时我们都在享受何老师给我们带来快乐，可知背后辛酸的汗水呢？何老师在读大学三年级时，每天需要应对高难度的阿拉伯语的学习，还担任着学生会的工作，兼职文艺部和宣传部的“要职”。除此之外，他还在央视担任支持，平日要撰写台本以及录影，有时还要出差去外地录制。每天他都很晚才回到学校，同学们可能已经下了晚自习，甚至都已经入睡了。而他只能先在学生会里将自己学生干部的事情都做完后，再回到宿舍开始预习第二天上课要准备的内容。&lt;/p&gt;

&lt;p&gt;02.
彭宇年轻的时还是街头一个小混混。当他树立人生中第一个梦想————进入电视台工作，生活从此跟之前是天壤之别。他时常对着电视机练习如何应对突发，还报名参加骗子的演员培训班。到了后来，他听说北京机会多，毅然决定北漂，每天在北京电影学院门口等着接活，做群众演员。&lt;/p&gt;

&lt;p&gt;为何现在要拼命？只为自己，只为自己生活得更好，只为青春无悔。&lt;/p&gt;

&lt;p&gt;你是否感到很震撼？看下你目前的生活状态，如果整天这么懒散。那么你该制定短期目标，并为之拼命一把。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;本文原创发布于微信公众号「极客猴」，欢迎关注第一时间获取更多原创分享&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name></name></author><category term="感悟" /><summary type="html">很多人往往有这样的状态，当完成一个目标之后，就守着这收获的成果沾沾自喜。你觉得考上了大学，就可以整天逃课沉迷于游戏？你觉得找到工作了，就可以准时下班走人，天天潇潇洒洒？答案是否定的。如果你是现在身处这状态，说明你对自己未来人生没有什么规划，是对自己极其不负责任的表示。你试问你自己，是否有在为自己拼命？</summary></entry><entry><title type="html">你该制定个新年计划</title><link href="http://localhost:4000/1713.html" rel="alternate" type="text/html" title="你该制定个新年计划" /><published>2017-01-03T11:38:51+08:00</published><updated>2017-01-03T11:38:51+08:00</updated><id>http://localhost:4000/%E4%BD%A0%E8%AF%A5%E5%88%B6%E5%AE%9A%E4%B8%AA%E6%96%B0%E5%B9%B4%E8%AE%A1%E5%88%92</id><content type="html" xml:base="http://localhost:4000/1713.html">&lt;p&gt;时间如握在手心中的沙子，缓缓地流失。我们稍不注意，一年光阴就流逝而去。在过去一年内，你可能实现年初制定的计划，或许离目标还有一步之遥，也许你已经把计划抛到九霄云外了。不管怎么样，2016年已经过去，我们应该以期待的目光迎接新一年。俗话说得好：“一年之计在于春”、“凡事预则立，不预则废”。因此，有必要为2017年制定一个计划。
我作为刚入职场的新人，专业技能不足，软实力不够硬。我会在新的一年针对这两方面一点一滴地积累，一步一步地提升。大致目标可为一下几个。&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;运营好公众号&lt;/code&gt;
  我会继续运营本公众号，每周推送2~3篇&lt;strong&gt;原创文章&lt;/strong&gt;。内容主要包括Android开发知识、Python开发知识、网络安全知识以及一些随笔。突然想起开通微信公众号，源于在去年11年份看到连岳、槽边往事、MacTalk By 池建强这个几个微信公众号在建议每个人应该懂点写作。再想想自己在运营一年的个人网站被人黑了之后，就没有再拿起笔头了。平时自己也是把所学的知识整理到个人笔记中，没有分享出来。综合个个因素，最终开通微信公众号。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;学习Python Web&lt;/code&gt;
  我已经把Python的基础知识掌握了，但是一直缺乏实战经验。当得知Python可以用于做Web服务器，我那是激动地不得了。后续公众号会更新Python Web开发一些文章。我打算从Django框架入手开始学起。当然，Python方面文章不仅仅只是推送Web方面，还有一些Python的实用文章，例如用Python编写的实用的小工具以及一些利用库做有趣事情的项目。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;至少读20本书&lt;/code&gt;
  我从小是不怎么爱读书，但是大学彻底改变了我。她让我迷上了看书。我现在每年都会坚持读书，无论是技术书籍还是文学小说，我会读。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;继续健身&lt;/code&gt;
  2016年3月，我开始接触健身。期间阅读了很多书籍以及健身文章，制定了好几个健身计划，有的坚持下来了，有的就直接作废了。2017年，我要对自己狠一点，坚持不懈，完成每月制定的健身计划，早日练出腹肌。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以上是我的2017年的目标。你制定了新年计划了吗？如果还没有，建议你制定计划。值得庆幸的是，2017年才过去3天，好好把握接下来的362天吧。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;本文原创发布于微信公众号「极客猴」，欢迎关注第一时间获取更多原创分享&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name></name></author><category term="感悟" /><summary type="html">时间如握在手心中的沙子，缓缓地流失。我们稍不注意，一年光阴就流逝而去。在过去一年内，你可能实现年初制定的计划，或许离目标还有一步之遥，也许你已经把计划抛到九霄云外了。不管怎么样，2016年已经过去，我们应该以期待的目光迎接新一年。俗话说得好：“一年之计在于春”、“凡事预则立，不预则废”。因此，有必要为2017年制定一个计划。 我作为刚入职场的新人，专业技能不足，软实力不够硬。我会在新的一年针对这两方面一点一滴地积累，一步一步地提升。大致目标可为一下几个。 运营好公众号 我会继续运营本公众号，每周推送2~3篇原创文章。内容主要包括Android开发知识、Python开发知识、网络安全知识以及一些随笔。突然想起开通微信公众号，源于在去年11年份看到连岳、槽边往事、MacTalk By 池建强这个几个微信公众号在建议每个人应该懂点写作。再想想自己在运营一年的个人网站被人黑了之后，就没有再拿起笔头了。平时自己也是把所学的知识整理到个人笔记中，没有分享出来。综合个个因素，最终开通微信公众号。</summary></entry><entry><title type="html">每逢佳节倍思亲</title><link href="http://localhost:4000/161221.html" rel="alternate" type="text/html" title="每逢佳节倍思亲" /><published>2016-12-21T08:50:43+08:00</published><updated>2016-12-21T08:50:43+08:00</updated><id>http://localhost:4000/%E6%AF%8F%E9%80%A2%E4%BD%B3%E8%8A%82%E5%80%8D%E6%80%9D%E4%BA%B2</id><content type="html" xml:base="http://localhost:4000/161221.html">&lt;p&gt;回忆童年
每逢冬至来临
外面寒风凛凛
屋内热气腾腾
全家人围在一起
吃汤圆
团团圆圆
如今
身为游子
在外漂流
更思念家
更思念父母亲
只能发
QQ说说、微博、朋友圈
给远方家人送上祝福？
不！
没有比给家人打一电话
来得更加直接
来的更加亲切
拿起你手中的手机 
给家里打一通电话
为爸妈送上节日祝福！
祝：冬至快乐~&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;本文原创发布于微信公众号「极客猴」，欢迎关注第一时间获取更多原创分享&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name></name></author><category term="随笔" /><summary type="html">回忆童年 每逢冬至来临 外面寒风凛凛 屋内热气腾腾 全家人围在一起 吃汤圆 团团圆圆 如今 身为游子 在外漂流 更思念家 更思念父母亲 只能发 QQ说说、微博、朋友圈 给远方家人送上祝福？ 不！ 没有比给家人打一电话 来得更加直接 来的更加亲切 拿起你手中的手机 给家里打一通电话 为爸妈送上节日祝福！ 祝：冬至快乐~</summary></entry><entry><title type="html">常用Python标准库</title><link href="http://localhost:4000/16125.html" rel="alternate" type="text/html" title="常用Python标准库" /><published>2016-12-05T11:53:39+08:00</published><updated>2016-12-05T11:53:39+08:00</updated><id>http://localhost:4000/%E5%B8%B8%E7%94%A8Python%E6%A0%87%E5%87%86%E5%BA%93</id><content type="html" xml:base="http://localhost:4000/16125.html">&lt;p&gt;众所周知，Python有庞大的库资源，有官方标准库以及第三方的扩展库。每个库都一把利器，能帮助我们快速处理某方面的问题。作为一名python的初学者，当把基本的语法、列表和元组、字典、迭代器、异常处理、I/O操作、抽象等知识点学完之后。我建议把官方常用的标准库也随便学下来。讲真的，你知道这些库之后，你会有种相见恨晚的感觉。&lt;/p&gt;

&lt;p&gt;接下来带大家走进python标准库的世界。PS： 使用Python的版本为Python3&lt;/p&gt;

&lt;h3 id=&quot;0x01-字符串&quot;&gt;0x01 字符串&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;re&lt;/code&gt;: 正则表达式。用来判断字符串是否是你指定的特定字符串。在爬虫项目中，经常能捕获到它的身影。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;StringIO&lt;/code&gt;: 提供以文件为保存形式来读和写字符串。还有个性能更加好的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cStringIO&lt;/code&gt;版本&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;struct&lt;/code&gt;: 以二进制字节序列来解释字符串。可以通过格式化参数，指定类型、长度、字节序（大小端）、内存对齐等。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;0x02-数据类型&quot;&gt;0x02 数据类型&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bisect&lt;/code&gt;: 数组二分算法。提供支持按顺序对列表进行排序，而不必每次在列表中插入后再去排序。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;heapq&lt;/code&gt;: 堆队列算法。最小堆：完全平衡二叉树， 所有节点都小于字节点。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;datetime&lt;/code&gt;: 提供操作日期和时间的类。其中有两种日期和时间类型： &lt;em&gt;naive&lt;/em&gt;和&lt;em&gt;aware&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;collections&lt;/code&gt;: 高性能容器数据类型。实现了Python的通用内置容器、字典、列表、集合，和元组专门的数据类型提供替代品&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pprint&lt;/code&gt;: 提供”整洁低打印”任意Python数据结构的能力。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;0x03-数学运算&quot;&gt;0x03 数学运算&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;random&lt;/code&gt;: 各种分布的伪随机数的生成器&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;math&lt;/code&gt;: 数学函数。提供了由C标准的数学函数访问。该库的函数不适用于复数。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cmath&lt;/code&gt;: 为复数提供的数学函数。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;operator&lt;/code&gt;: 提供了重载操作符&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;0x04-文件和目录&quot;&gt;0x04 文件和目录&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;os.path&lt;/code&gt;: 常用路径名操作。提供了操作路径名的常用的函数。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;filecmp&lt;/code&gt;: 文件和目录的比较。提供了比较文件和目录的函数。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shutil&lt;/code&gt;: 高级的文件操作。提供了许多文件和文件集上的操作操作。尤其是提供支持文件复制和删除的函数。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;0x05-数据存储&quot;&gt;0x05 数据存储&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;serialization&lt;/code&gt;: Python专用的序列化算法，通常不建议用来存储自定义数据。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pickle&lt;/code&gt;: Python对象序列化。提供了一个基本但功能强大的Python对象序列化和反序列化算法。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cPickle&lt;/code&gt;: 比&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pickle&lt;/code&gt;快1000倍的对象序列化库， 和&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pickle&lt;/code&gt;可互相替换。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shevle&lt;/code&gt;: 将对象pickle序列化，然后保存到&lt;em&gt;anydbm&lt;/em&gt;格式文件。&lt;em&gt;anydbm&lt;/em&gt;是KV结构的数据库，可以保存多个序列化对象。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sqlite3&lt;/code&gt;: SQLite数据库DB-API 2.0接口。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;0x06-数据压缩&quot;&gt;0x06 数据压缩&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;zipfile&lt;/code&gt;: 提供了ZIP文件个创建、读取、写入、最佳和列出zip文件的函数。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tarfile&lt;/code&gt;: 提供了tar文件的压缩和解压的函数。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;0x07-文件格式&quot;&gt;0x07 文件格式&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;csv&lt;/code&gt;: 提供对CSV文件的读取和写入的函数。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;0x08-加密&quot;&gt;0x08 加密&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hashlib&lt;/code&gt;: 安全哈希和消息摘要。实现了一个通用的接口来实现多个不同的安全哈希和消息摘要算法。包括 FIPS 安全哈希算法 SHA1、SHA224、SHA256、SHA384和 SHA512（定义在 FIPS 180-2），以及 RSA 的 MD5 算法（在互联网 RFC 1321中定义)。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hmac&lt;/code&gt;: 用于消息认证的加密哈希算法。实现了RFC 2104 中描述的HMAC 算法。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;md5&lt;/code&gt;: 实现了MD5加密算法。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sha&lt;/code&gt;: 实现了sha1加密算法。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;0x09-操作系统&quot;&gt;0x09 操作系统&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;time&lt;/code&gt;: 时间获取和转换。提供了各种与时间相关的函数。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;argparse&lt;/code&gt;: 命令行选项、参数和子命令的解析器。使用该库使得编码用户友好的命令行接口非常容易。取代了之前的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;optparse&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;io&lt;/code&gt;: 提供接口处理IO流。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;logging&lt;/code&gt;: Python的日志工具。提供了日志记录的API。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;logging.config&lt;/code&gt;: Python日志配置。用于配置日志模块的API。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;os&lt;/code&gt;: 提供丰富的雨MAC，NT，Posix等操作系统进行交互的能力。这个模块允许程序独立的于操作系统环境。文件系统，用户数据库和权限进行交互。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_thread&lt;/code&gt;: 多线程控制。提供了一个底层、原始的操作 —— 多个控制线程共享全局数据空间。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;threading&lt;/code&gt;: 高级线程接口。是基于&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_thread&lt;/code&gt;模块的，但是比&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_thread&lt;/code&gt;更加容易使用、更高层次的线程API。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sys&lt;/code&gt;: 提供访问和维护python解释器的能力。这包括了提示信息，版本，整数的最大值，可用模块，路径钩子，标准错误，标准输入输出的定位和解释器调用的命令行参数。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;0x10-进程通信&quot;&gt;0x10 进程通信&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;subprocess&lt;/code&gt;: 管理子进程。允许用户产生新的进程，然后连接他们的输入/输出/错误/管道，并获取返回值。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;socket&lt;/code&gt;: 底层网络接口。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;signal&lt;/code&gt;: 设置异步时间处理handlers。信号是软中断，提供了一种异步事件通知机制。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;0x11-网络数据处理&quot;&gt;0x11 网络数据处理&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;json&lt;/code&gt;: JSON格式的编码器和解码器。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;base64&lt;/code&gt;: 提供依据RFC 3548的规定（Base16, Base32, Base64 ）进行数据编码和解码。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;htmllib&lt;/code&gt;: 提供了一个HTML语法解析器。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mimetypes&lt;/code&gt;: 提供了判断给定的URL的MIME类型。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;0x12-操作因特网网络协议&quot;&gt;0x12 操作因特网网络协议&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;urllib&lt;/code&gt;: 提供了用于获取万维网数据的高层接口。这个是Python2.7版本的，Python3已经将其拆分成多个模块&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;urllib.request&lt;/code&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;urllib.parse&lt;/code&gt;和&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;urllib.error&lt;/code&gt;。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;urlparse&lt;/code&gt;: 提供了用于处理URL的函数，可以在URL和平台特定的文件名间相互转换。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http.client&lt;/code&gt;: HTTP协议客户端。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;telnetlib&lt;/code&gt;: 提供了实现Telnet协议的Telnet类。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;poplib&lt;/code&gt;: POP3协议客户端。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ftplib&lt;/code&gt;: FTP协议客户端。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;smtplib&lt;/code&gt;: SMTP协议客户端。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;webbrowser&lt;/code&gt;: 提供控制浏览器行为的函数。&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;本文原创发布于微信公众号「极客猴」，欢迎关注第一时间获取更多原创分享&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name></name></author><category term="Python" /><category term="标准库" /><summary type="html">众所周知，Python有庞大的库资源，有官方标准库以及第三方的扩展库。每个库都一把利器，能帮助我们快速处理某方面的问题。作为一名python的初学者，当把基本的语法、列表和元组、字典、迭代器、异常处理、I/O操作、抽象等知识点学完之后。我建议把官方常用的标准库也随便学下来。讲真的，你知道这些库之后，你会有种相见恨晚的感觉。</summary></entry><entry><title type="html">深入理解HTTP</title><link href="http://localhost:4000/161120.html" rel="alternate" type="text/html" title="深入理解HTTP" /><published>2016-11-20T22:35:13+08:00</published><updated>2016-11-20T22:35:13+08:00</updated><id>http://localhost:4000/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3HTTP</id><content type="html" xml:base="http://localhost:4000/161120.html">&lt;h2 id=&quot;0x01-http是什么&quot;&gt;0x01 HTTP是什么&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;HTTP全称是HyperText Transfer Protocal，即：超文本传输协议。它主要规定了客户端和服务器之间的通信格式。HTTP还是一个基于请求/响应模式的、无状态的协议；即我们通常所说的Request/Response。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;0x02-http与tcp的关系&quot;&gt;0x02 HTTP与TCP的关系&lt;/h2&gt;
&lt;p&gt;TCP协议是位于TCP/IP参考模型中的网络互连层，而HTTP协议属于应用层。因此，HTTP协议是基于TCP协议。&lt;/p&gt;

&lt;h2 id=&quot;0x03-http请求http-request&quot;&gt;0x03 HTTP请求(HTTP Request)&lt;/h2&gt;
&lt;p&gt;HTTP请求由三部分组成，分别是：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;请求行&lt;/li&gt;
  &lt;li&gt;HTTP头&lt;/li&gt;
  &lt;li&gt;请求体&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下面是请求示例：&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /?tn=90058352_hao_pg HTTP/1.1
Host: www.hao123.com
Connection: keep-alive
Cache-Control: max-age=0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 UBrowser/5.7.16400.16 Safari/537.36
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;请求行&quot;&gt;请求行&lt;/h3&gt;
&lt;p&gt;同样也是由请求方法（POST/GET）方式、请求的主机、协议版本号三部分组成。下面为请求行的示例：
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GET /?tn=90058352_hao_pg HTTP/1.1&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;http头&quot;&gt;HTTP头&lt;/h3&gt;
&lt;p&gt;HTTP头又细分为请求头(request header)、普通头(general header)、实体头(entity header)
而HTTP头主要关注点是其字段&lt;/p&gt;

&lt;h4 id=&quot;1-accept&quot;&gt;1. Accept&lt;/h4&gt;
&lt;p&gt;作用: 浏览器可以接受的媒体类型
例如：  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Accept: text/html&lt;/code&gt;  代表浏览器可以接受服务器回发的类型为 text/html  也就是我们常说的html文档
通配符 * 代表任意类型
例如：  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Accept: */*&lt;/code&gt;  代表浏览器可以处理所有类型,(一般浏览器发给服务器都是发这个)&lt;/p&gt;

&lt;h4 id=&quot;2-accept-language&quot;&gt;2. Accept-Language&lt;/h4&gt;
&lt;p&gt;作用： 浏览器申明自己接收的语言。 
语言跟字符集的区别：中文是语言，中文有多种字符集，比如big5，gb2312，gbk等等；
例如： &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Accept-Language: zh-CN,zh&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;3-accept-encoding&quot;&gt;3. Accept-Encoding&lt;/h4&gt;
&lt;p&gt;作用： 浏览器申明自己接收的编码方法，通常指定压缩方法（gzip，deflate）
例如：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Accept-Encoding: gzip&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Accept-Encoding: deflate&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;4-user-agent&quot;&gt;4. User-Agent&lt;/h4&gt;
&lt;p&gt;作用： 告诉HTTP服务器， 客户端使用的操作系统的名称和版本以及浏览器的名称和版本.
例如： &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;User-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 UBrowser/5.7.16400.16 Safari/537.36&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;5-content-type&quot;&gt;5. Content-Type&lt;/h4&gt;
&lt;p&gt;作用： 告诉服务器，请求的内容的类型
常见的字段： 假设使用POST方式请求&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;text/xml              [请求体为文本]&lt;/li&gt;
  &lt;li&gt;application/json      [请求体为JSON数据]&lt;/li&gt;
  &lt;li&gt;application/xml       [请求体为xml数据]&lt;/li&gt;
  &lt;li&gt;image/jpeg            [请求体为jpeg图片]&lt;/li&gt;
  &lt;li&gt;multipart/form-data   [请求体为表单]&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;6-cookie&quot;&gt;6. Cookie&lt;/h4&gt;
&lt;p&gt;作用： 最重要的header，将cookie的值发送给HTTP服务器&lt;/p&gt;

&lt;h4 id=&quot;7-connection&quot;&gt;7. Connection&lt;/h4&gt;
&lt;p&gt;例如：　&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Connection: keep-alive&lt;/code&gt;   当一个网页打开完成后，客户端和服务器之间用于传输HTTP数据的TCP连接不会关闭，如果客户端再次访问这个服务器上的网页，会继续使用这一条已经建立的连接
例如：  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Connection: close&lt;/code&gt;  代表一个Request完成后，客户端和服务器之间用于传输HTTP数据的TCP连接会关闭， 当客户端再次发送Request，需要重新建立TCP连接。&lt;/p&gt;

&lt;h4 id=&quot;8-content-length&quot;&gt;8. Content-Length&lt;/h4&gt;
&lt;p&gt;作用：发送给HTTP服务器数据的长度。
例如： &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Content-Length: 18&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;9-referer&quot;&gt;9. Referer:&lt;/h4&gt;
&lt;p&gt;作用： 提供了Request的上下文信息的服务器，告诉服务器我是从哪个链接过来的。&lt;/p&gt;

&lt;h3 id=&quot;请求体&quot;&gt;请求体&lt;/h3&gt;
&lt;p&gt;这个只有post方式请求才有，get方式请求没有。&lt;/p&gt;

&lt;h4 id=&quot;0x04-http响应http-response&quot;&gt;0x04 HTTP响应(HTTP Response)&lt;/h4&gt;
&lt;p&gt;HTTP Response的结构跟Request的结构基本一样。同样分为三部分：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;响应行&lt;/li&gt;
  &lt;li&gt;响应头&lt;/li&gt;
  &lt;li&gt;响应体&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下面是响应示例：&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HTTP/1.1 200 OK
Cache-Control: max-age=0
Content-Encoding: gzip
Content-Length: 156474
Content-Type: text/html;charset=UTF-8
Cxy_all: 90058352_hao_pg+d4fa7f28cefb9b120f868558e440bafa
Date: Sun, 20 Nov 2016 05:09:51 GMT
Expires: Sun, 20 Nov 2016 05:09:51 GMT
Lfy: nj02.11
Server: BWS/1.0
Set-Cookie: __bsi=11619936655404239050_00_60_N_R_126_0303_c02f_Y; max-age=3600; domain=www.hao123.com; path=/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;响应行&quot;&gt;响应行&lt;/h3&gt;
&lt;p&gt;响应行由协议版本、响应状态构成
下面为响应行的示例：
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTP/1.1 200 OK&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;响应头&quot;&gt;响应头&lt;/h3&gt;
&lt;p&gt;响应头关注点是字段，常见的字段如下：&lt;/p&gt;

&lt;h4 id=&quot;1cache-control&quot;&gt;1.Cache-Control&lt;/h4&gt;
&lt;p&gt;作用: 非常重要的规则。 这个用来指定Response-Request遵循的缓存机制。
例如：
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cache-Control:Public&lt;/code&gt;      可以被任何缓存所缓存
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cache-Control:Private&lt;/code&gt;     内容只缓存到私有缓存中
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cache-Control:no-cache&lt;/code&gt;    所有内容都不会被缓存&lt;/p&gt;

&lt;h4 id=&quot;2content-type&quot;&gt;2.Content-Type&lt;/h4&gt;
&lt;p&gt;作用：服务器告诉浏览器，自己响应的对象的类型和字符集
例如:
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Content-Type: text/html; charset=utf-8&lt;/code&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Content-Type: image/jpeg&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;3expires&quot;&gt;3.Expires&lt;/h4&gt;
&lt;p&gt;作用: 浏览器会在指定过期时间内使用本地缓存
例如: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Expires:Sun, 20 Nov 2016 05:09:51 GMT&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;4connection&quot;&gt;4.Connection&lt;/h4&gt;
&lt;p&gt;跟HTTP头中的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Connection&lt;/code&gt;是同样的原理&lt;/p&gt;

&lt;h4 id=&quot;5content-encoding&quot;&gt;5.Content-Encoding&lt;/h4&gt;
&lt;p&gt;跟HTTP中头的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Content-Encoding&lt;/code&gt;是同样的原理&lt;/p&gt;

&lt;h4 id=&quot;6content-length&quot;&gt;6.Content-Length&lt;/h4&gt;
&lt;p&gt;作用：指明实体正文的长度，以字节方式存储的十进制数字来表示。
例如: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Content-Length: 156474&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;7date&quot;&gt;7.Date&lt;/h4&gt;
&lt;p&gt;作用: 生成消息的具体时间和日期
例如: Date: Sun, 20 Nov 2016 05:09:51 GMT&lt;/p&gt;

&lt;h3 id=&quot;响应体&quot;&gt;响应体&lt;/h3&gt;
&lt;p&gt;响应体包含的内容是网页的内容信息，主要是html代码等&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;本文原创发布于微信公众号「极客猴」，欢迎关注第一时间获取更多原创分享&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name></name></author><category term="HTTP" /><summary type="html">0x01 HTTP是什么</summary></entry></feed>